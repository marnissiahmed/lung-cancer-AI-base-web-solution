{"ast":null,"code":"var _jsxFileName = \"D:\\\\fin_de_etude\\\\data\\\\pfe\\\\front end\\\\test-project\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      // Initially, no file is selected\n      selectedFile: null\n    };\n    // On file select (from the pop up)\n    this.onFileChange = event => {\n      // Update the state\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n    // On file upload (click the upload button)\n    this.onFileUpload = () => {\n      // Create an object of formData\n      const formData = new FormData();\n\n      // Update the formData object\n      formData.append(\"myFile\", this.state.selectedFile, this.state.selectedFile.name);\n\n      // Details of the uploaded file\n      console.log(this.state.selectedFile);\n\n      // Request made to the backend api\n      // Send formData object\n      axios.post(\"api/uploadfile\", formData);\n    };\n    // File content to be displayed after\n    // file upload is complete\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" File Details: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" File Name: \", this.state.selectedFile.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" File Type: \", this.state.selectedFile.type, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Modified: \", \" \", \" \", this.state.selectedFile.lastModifiedDate.toDateString(), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 22\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \" Choose before Pressing the Upload button \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 22\n        }, this);\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"GeeksforGeeks \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"File Upload using React!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 34\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onFileUpload,\n          children: \"Upload!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 16\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 18\n      }, this), \" \", this.fileData(), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 18\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["logo","axios","React","Component","jsxDEV","_jsxDEV","App","constructor","arguments","state","selectedFile","onFileChange","event","setState","target","files","onFileUpload","formData","FormData","append","name","console","log","post","fileData","children","fileName","_jsxFileName","lineNumber","columnNumber","type","lastModifiedDate","toDateString","render","onChange","onClick"],"sources":["D:/fin_de_etude/data/pfe/front end/test-project/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport axios from 'axios';\n\nimport React, { Component } from 'react';\n\nclass App extends Component {\n\n    state = {\n\n        // Initially, no file is selected\n        selectedFile: null\n    };\n\n    // On file select (from the pop up)\n    onFileChange = event => {\n\n        // Update the state\n        this.setState({ selectedFile: event.target.files[0] });\n\n    };\n\n    // On file upload (click the upload button)\n    onFileUpload = () => {\n\n        // Create an object of formData\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"myFile\",\n            this.state.selectedFile,\n            this.state.selectedFile.name\n        );\n\n        // Details of the uploaded file\n        console.log(this.state.selectedFile);\n\n        // Request made to the backend api\n        // Send formData object\n        axios.post(\"api/uploadfile\", formData);\n    };\n\n    // File content to be displayed after\n    // file upload is complete\n    fileData = () => {\n\n        if (this.state.selectedFile) {\n\n            return ( < div >\n                <\n                h2 > File Details: < /h2> <p> File Name: { this.state.selectedFile.name } </p >\n\n                <\n                p > File Type: { this.state.selectedFile.type } < /p>\n\n                <\n                p >\n                Last Modified: { \" \" } { this.state.selectedFile.lastModifiedDate.toDateString() } < /p>\n\n                <\n                /div>\n            );\n        } else {\n            return ( < div >\n                <\n                br / >\n                <\n                h4 > Choose before Pressing the Upload button < /h4> </div >\n            );\n        }\n    };\n\n    render() {\n\n        return ( <\n            div >\n            <\n            h1 >\n            GeeksforGeeks < /h1> <h3>\n            File Upload using React!\n            <\n            /h3> <\n            div >\n            <\n            input type = \"file\"\n            onChange = { this.onFileChange }\n            /> <button onClick = { this.onFileUpload } >\n            Upload!\n            <\n            /button> </div > { this.fileData() } < /div>\n        );\n    }\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}